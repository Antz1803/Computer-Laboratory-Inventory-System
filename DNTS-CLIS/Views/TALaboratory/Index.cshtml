@{
    ViewData["Title"] = "Technical Assistant Laboratory";
}

<h2>Laboratory: @ViewBag.LaboratoryName</h2>

<!-- TrackNo Dropdown -->
<div class="form-group">
    <label for="selectedTrackNo">Select Track No:</label>
    <select id="selectedTrackNo" class="form-control" onchange="fetchTableData()">
        <option value="">-- Select Track No --</option>
        @foreach (var trackNo in ViewBag.TrackNos)
        {
            <option value="@trackNo">@trackNo</option>
        }
    </select>
</div>

<!-- Table to display data -->
<div class="mt-4">
    <h4 class="mb-3">Track Details</h4>
    <div class="table-responsive">
        <table class="table table-striped table-hover table-bordered text-center" id="trackTable">
            <thead id="tableHead"></thead>
            <tbody id="tableBody"></tbody>
        </table>
    </div>
</div>
<!-- Modal for Editing Details -->
<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content shadow-lg rounded">
            <div class="modal-header bg-secondary text-white">
                <h5 class="modal-title">
                    <i class="fas fa-edit"></i> Edit Item Details
                </h5>
            </div>
            <div class="modal-body">
                <form id="editForm">
                    <input type="hidden" id="editId">
                    <div class="row">
                        <div class="col-md-6">
                            <label for="editCTN">CTN:</label>
                            <input type="text" id="editCTN" class="form-control">
                        </div>
                        <div class="col-md-6">
                            <label for="editParticular">Particular:</label>
                            <input type="text" id="editParticular" class="form-control">
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-md-6">
                            <label for="editBrand">Brand:</label>
                            <input type="text" id="editBrand" class="form-control">
                        </div>
                        <div class="col-md-6">
                            <label for="editSerialStickerNumber">Serial Sticker Number:</label>
                            <input type="text" id="editSerialStickerNumber" class="form-control">
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-md-6">
                            <label for="editStatus">Status:</label>
                            <input type="text" id="editStatus" class="form-control">
                        </div>
                        <div class="col-md-6">
                            <label for="editLocation">Location:</label>
                            <input type="text" id="editLocation" class="form-control">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="$('#editModal').modal('hide');">
                    <i class="fas fa-times"></i> Close
                </button>
                <button type="button" class="btn btn-success" id="saveEditBtn">
                    <i class="fas fa-save"></i> Save Changes
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Repair Details -->
<div class="modal fade" id="repairModal" tabindex="-1" role="dialog" aria-labelledby="repairModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content shadow-lg rounded">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="repairModalLabel">
                    <i class="fas fa-tools"></i> Repair Details
                </h5>
            </div>
            <div class="modal-body p-4">
                <form id="repairForm">
                    <div class="row">
                        <div class="col-md-6">
                            <label for="id">ID:</label>
                            <input type="text" id="id" class="form-control" readonly>
                        </div>
                        <div class="col-md-6">
                            <label for="ctn">CTN:</label>
                            <input type="text" id="ctn" class="form-control" readonly>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-md-6">
                            <label for="particular">Particular:</label>
                            <input type="text" id="particular" class="form-control" readonly>
                        </div>
                        <div class="col-md-6">
                            <label for="brand">Brand:</label>
                            <input type="text" id="brand" class="form-control" readonly>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-md-6">
                            <label for="serialStickerNumber">Serial Sticker Number:</label>
                            <input type="text" id="serialStickerNumber" class="form-control" readonly>
                        </div>
                        <div class="col-md-6">
                            <label for="status">Status:</label>
                            <input type="text" id="status" class="form-control" readonly>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-md-6">
                            <label for="location">Location:</label>
                            <input type="text" id="location" class="form-control" readonly>
                        </div>
                        <div class="col-md-6">
                            <label for="dateOfAcquisition">Date of Acquisition:</label>
                            <input type="text" id="dateOfAcquisition" class="form-control" readonly>
                        </div>
                    </div>

                    <div class="form-group mt-4">
                        <label for="description">Description of Damage:</label>
                        <textarea id="description" class="form-control" rows="3"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-secondary" onclick="$('#repairModal').modal('hide');">
                    <i class="fas fa-times"></i> Close
                </button>

                <button type="button" class="btn btn-success" id="saveRepairBtn">
                    <i class="fas fa-save"></i> Save
                </button>
            </div>
        </div>
    </div>
</div>

<script>
       function fetchTableData() {
        let trackNo = document.getElementById("selectedTrackNo").value;
        let tableHead = document.getElementById("tableHead");
        let tableBody = document.getElementById("tableBody");

        tableHead.innerHTML = "";
        tableBody.innerHTML = "";

        if (trackNo) {
            fetch(`/TALaboratory/GetTableDataOne?trackNo=${encodeURIComponent(trackNo)}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    console.log("Fetched data:", data); // Debug: Log the data structure
                    if (!data || data.length === 0) {
                        tableBody.innerHTML = "<tr><td colspan='8'>No data available</td></tr>";
                        return;
                    }

                    // Table header row
                    let headerRow = document.createElement("tr");
                    tableHead.appendChild(headerRow);

                    // Add ID column header
                    let idHeader = document.createElement("th");
                    idHeader.textContent = "ID";
                    headerRow.appendChild(idHeader);

                    // All column names from the first data object
                    let columns = ["CTN", "Particular", "Brand", "Serial Sticker Number", "Status", "Location"];

                    // Create headers for each column
                    columns.forEach(column => {
                        let th = document.createElement("th");
                        th.textContent = column;
                        headerRow.appendChild(th);
                    });

                    // Add Actions column header
                    let actionsHeader = document.createElement("th");
                    actionsHeader.textContent = "Actions";
                    headerRow.appendChild(actionsHeader);

                    // Create table rows for each data item
                    data.forEach(row => {
                        let tr = document.createElement("tr");

                        // Add ID cell
                        let idCell = document.createElement("td");
                        idCell.textContent = row.Id || row.ID || "";
                        tr.appendChild(idCell);

                        // Map the row object to our expected column names
                        let mappedRow = {
                            "CTN": row.CTN || row.Ctn || "",
                            "Particular": row.Particular || "",
                            "Brand": row.Brand || "",
                            "Serial Sticker Number": row["Serial Sticker Number"] || row.SerialStickerNumber || "",
                            "Status": row.Status || "",
                            "Location": row.Location || ""
                        };

                        // Add data cells
                        columns.forEach(column => {
                            let td = document.createElement("td");
                            td.textContent = mappedRow[column];
                            tr.appendChild(td);
                        });

                        // Add actions
                        let actionsTd = document.createElement("td");

                        let editBtn = document.createElement("button");
                        editBtn.innerHTML = '<i class="fas fa-edit"></i> Edit';
                        editBtn.className = "btn btn-primary btn-sm m-1";
                        editBtn.onclick = function() {
                            console.log("Edit clicked for row:", row); // Debug: Log the row data
                            editItem(row);
                        };

                        actionsTd.appendChild(editBtn);
                        tr.appendChild(actionsTd);

                        tableBody.appendChild(tr);
                    });
                })
                .catch(error => {
                    console.error('Error fetching table data:', error);
                    tableBody.innerHTML = `<tr><td colspan='8'>Error loading data: ${error.message}</td></tr>`;
                });
        } else {
            tableBody.innerHTML = "<tr><td colspan='8'>Please select a Track No</td></tr>";
        }
    }

    // 2. Improved editItem function with more robust property access
    function editItem(item) {
        console.log("Opening edit modal for item:", item); // Debug: Log the item being edited

        // Get the ID regardless of casing
        const id = item.Id || item.ID || item.id || "";

        // Populate the edit modal with item data, handling potential property name variations
        document.getElementById("editId").value = id;
        document.getElementById("editCTN").value = item.CTN || item.Ctn || "";
        document.getElementById("editParticular").value = item.Particular || "";
        document.getElementById("editBrand").value = item.Brand || "";
        document.getElementById("editSerialStickerNumber").value =
            item["SERIALSTICKERNUMBER"] || item.SerialStickerNumber || "";
        document.getElementById("editStatus").value = item.Status || "";
        document.getElementById("editLocation").value = item.Location || "";

        // Show the modal using jQuery
        $('#editModal').modal('show');
    }

    // 3. Improved save button click handler with better error handling
    document.getElementById("saveEditBtn").addEventListener("click", function() {
        const trackNo = document.getElementById("selectedTrackNo").value;
        const id = document.getElementById("editId").value;

        if (!trackNo) {
            alert("Track No is required");
            return;
        }

        if (!id) {
            alert("Item ID is missing");
            return;
        }

        const data = {
            Id: parseInt(id),
            CTN: document.getElementById("editCTN").value,
            Particular: document.getElementById("editParticular").value,
            Brand: document.getElementById("editBrand").value,
            SerialStickerNumber: document.getElementById("editSerialStickerNumber").value,
            Status: document.getElementById("editStatus").value,
            Location: document.getElementById("editLocation").value,
            TrackNo: trackNo
        };

        console.log("Sending data to server:", data); // Debug: Log the data being sent

        fetch('/TALaboratory/SaveEditedItem', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
        .then(response => {
            console.log("Server response:", response); // Debug: Log the response

            if (!response.ok) {
                return response.text().then(text => {
                    throw new Error(text || `Server returned ${response.status}`);
                });
            }
            return response.json();
        })
        .then(result => {
            console.log("Success:", result);
            alert("Item updated successfully!");
            $('#editModal').modal('hide');
            fetchTableData(); // Refresh the table
        })
        .catch(error => {
            console.error("Error:", error);
            alert("Failed to update item: " + error.message);
        });
    });

    // 4. Initialize everything when the document loads
    document.addEventListener("DOMContentLoaded", function() {
        // If there's already a Track No selected, load its data
        const trackNoSelect = document.getElementById("selectedTrackNo");
        if (trackNoSelect.value) {
            fetchTableData();
        }
    });
</script>
