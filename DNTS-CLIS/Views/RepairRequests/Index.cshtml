@model List<DNTS_CLIS.Controllers.TALaboratoryController.RepairRequestModel>

@{
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
    ViewData["Title"] = "Repair Requests";
}

<h2 style="margin-top:50px;">Repair Requests</h2>

<div class="container-fluid">
    <div class="card" style="width:1200px;">
        <div class="card-header bg-primary text-white">
            <h4><i class="fas fa-tools"></i> Pending Repair Requests</h4>
        </div>
        <div class="card-body">
            @if (Model != null && Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="bg-light">
                            <tr>
                                <th>ID</th>
                                <th>Track No</th>
                                <th>CTN</th>
                                <th>Brand</th>
                                <th>Particular</th>
                                <th>Status</th>
                                <th>Requested By</th>
                                <th>Request Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var request in Model)
                            {
                                <tr>
                                    <td>@request.Id</td>
                                    <td>@request.TrackNo</td>
                                    <td>@request.CTN</td>
                                    <td>@request.Brand</td>
                                    <td>@request.Particular</td>
                                    <td>
                                        @if (request.Status == "Pending")
                                        {
                                            <span class="badge bg-warning">Pending</span>
                                        }
                                        else if (request.Status == "Repairing")
                                        {
                                            <span class="badge bg-info">Repairing</span>
                                        }
                                    </td>
                                    <td>@request.RequestedBy</td>
                                    <td>@request.RequestDate.ToString("MMM dd, yyyy HH:mm")</td>
                                    <td style="width:270px;">
                                        <button class="btn btn-sm" onclick="viewDetails('@request.Id')">
                                            <img src="~/Images/details.svg" width="35" height="auto" />
                                        </button>

                                        @if (request.Status == "Pending")
                                        {
                                            <button class="btn btn-sm btn-success" onclick="processRequest('@request.Id', 'accept')">
                                                <i class="fas fa-check"></i> Accept
                                            </button>
                                        
                                        }
                                        @if (request.Status == "Repairing")
                                        {
                                            <button class="btn btn-sm" onclick="processRequest('@request.Id', 'complete')">
                                                <img src="~/Images/check-circle.svg" width="35" height="auto" />
                                            </button>
                                            <button class="btn btn-sm" onclick="processRequest('@request.Id', 'incomplete')">
                                                <img src="~/Images/incomplete.svg" width="35" height="auto" />
                                            </button>
                                            <button class="btn btn-sm" onclick="openNotesModal(@request.Id)">
                                                <img src="~/Images/notes.svg" width="35" height="auto" />
                                            </button>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i> No pending repair requests found.
                </div>
            }
        </div>
    </div>
</div>

<!-- Details Modal -->
<div class="modal fade" id="detailsModal" tabindex="-1" role="dialog" aria-labelledby="detailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title d-flex align-items-center" id="detailsModalLabel">
                    <i class="fas fa-tools me-2"></i>
                    Repair Request Details
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <!-- Item Information Card -->
                <div class="card mb-4 border-0 shadow-sm">
                    <div class="card-header bg-light">
                        <h6 class="mb-0 text-primary">
                            <i class="fas fa-info-circle me-2"></i>Item Information
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="row g-3">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label fw-bold text-muted">
                                        <i class="fas fa-hashtag me-1"></i>Item ID:
                                    </label>
                                    <p class="form-control-plaintext border-bottom pb-1" id="detailItemId">-</p>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label fw-bold text-muted">
                                        <i class="fas fa-route me-1"></i>Track No:
                                    </label>
                                    <p class="form-control-plaintext border-bottom pb-1" id="detailTrackNo">-</p>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label fw-bold text-muted">
                                        <i class="fas fa-phone me-1"></i>CTN:
                                    </label>
                                    <p class="form-control-plaintext border-bottom pb-1" id="detailCTN">-</p>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label fw-bold text-muted">
                                        <i class="fas fa-tag me-1"></i>Brand:
                                    </label>
                                    <p class="form-control-plaintext border-bottom pb-1" id="detailBrand">-</p>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label fw-bold text-muted">
                                        <i class="fas fa-list-alt me-1"></i>Particular:
                                    </label>
                                    <p class="form-control-plaintext border-bottom pb-1" id="detailParticular">-</p>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label fw-bold text-muted">
                                        <i class="fas fa-barcode me-1"></i>Serial Sticker Number:
                                    </label>
                                    <p class="form-control-plaintext border-bottom pb-1" id="detailSerialStickerNumber">-</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Status & Request Information Card -->
                <div class="card mb-4 border-0 shadow-sm">
                    <div class="card-header bg-light">
                        <h6 class="mb-0 text-primary">
                            <i class="fas fa-clipboard-list me-2"></i>Status & Request Information
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="row g-3">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label fw-bold text-muted">
                                        <i class="fas fa-info-circle me-1"></i>Status:
                                    </label>
                                    <div id="detailStatus">
                                        <span class="badge bg-warning text-dark px-3 py-2">
                                            <i class="fas fa-clock me-1"></i>Pending
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label fw-bold text-muted">
                                        <i class="fas fa-map-marker-alt me-1"></i>Location:
                                    </label>
                                    <p class="form-control-plaintext border-bottom pb-1" id="detailLocation">-</p>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label fw-bold text-muted">
                                        <i class="fas fa-user me-1"></i>Requested By:
                                    </label>
                                    <p class="form-control-plaintext border-bottom pb-1" id="detailRequestedBy">-</p>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label fw-bold text-muted">
                                        <i class="fas fa-calendar-alt me-1"></i>Request Date:
                                    </label>
                                    <p class="form-control-plaintext border-bottom pb-1" id="detailRequestDate">-</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Description Card -->
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-light">
                        <h6 class="mb-0 text-primary">
                            <i class="fas fa-file-alt me-2"></i>Description of Damage
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="alert alert-light border-start border-4 border-primary mb-0" id="detailDescription">
                            No description available.
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer" style="background-color:#027bce">
            </div>
        </div>
    </div>
</div>

<!-- Notes Modal -->
<div class="modal fade" id="notesModal" tabindex="-1" aria-labelledby="notesModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header" style="background-color:#ffb703">
                <h5 class="modal-title" id="notesModalLabel">Repair Request Notes</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Existing Notes Section -->
                <div class="mb-4">
                    <h6 class="fw-bold mb-3">Previous Notes:</h6>
                    <div id="existingNotes" class="border rounded p-3 mb-3" style="max-height: 300px; overflow-y: auto; background-color: #f8f9fa;">
                        <div class="text-muted">Loading notes...</div>
                    </div>
                </div>

                <!-- Add New Note Section -->
                <div>
                    <h6 class="fw-bold mb-3">Add New Note:</h6>
                    <div id="notesForm">
                        <input type="hidden" id="repairRequestId" value="">
                        <div class="mb-3">
                            <textarea class="form-control"
                                      id="noteText"
                                      rows="4"
                                      placeholder="Enter your note here..."
                                      maxlength="3000"
                                      required></textarea>
                            <div class="form-text">
                                <span id="charCount">0</span>/5000 characters
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveNote()">
                    <i class="fas fa-save"></i> Save Note
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    // Function to view details
    function viewDetails(id) {
        fetch(`/RepairRequests/GetRepairRequest?id=${id}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log("Repair request details:", data);

                // Populate the modal with data
                document.getElementById("detailItemId").textContent = data.itemId;
                document.getElementById("detailTrackNo").textContent = data.trackNo;
                document.getElementById("detailCTN").textContent = data.ctn;
                document.getElementById("detailBrand").textContent = data.brand;
                document.getElementById("detailParticular").textContent = data.particular;
                document.getElementById("detailSerialStickerNumber").textContent = data.serialStickerNumber;
                document.getElementById("detailStatus").textContent = data.status;
                document.getElementById("detailLocation").textContent = data.location;
                document.getElementById("detailRequestedBy").textContent = data.requestedBy;
                document.getElementById("detailRequestDate").textContent = new Date(data.requestDate).toLocaleString();
                document.getElementById("detailDescription").textContent = data.description;

                // Show the modal
                $('#detailsModal').modal('show');
                $('#close').modal('close');
            })
            .catch(error => {
                console.error("Error fetching repair request details:", error);
                alert("Error fetching details: " + error.message);
            });
    }
        function closeDetailsModal() {
        $('#detailsModal').modal('hide');
    }

        // Function to process a request (accept, decline, complete)
       function processRequest(id, action) {
        let actionText = action === 'accept' ? 'accept' : (action === 'incomplete' ? 'incomplete' : 'mark as complete');

        if (!confirm(`Are you sure you want to ${actionText} this repair request?`)) {
            return;
        }

        // Log what we're sending for debugging
        console.log(`Processing request - ID: ${id}, Action: ${action}`);

        fetch('/RepairRequests/ProcessRepairRequest', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                id: parseInt(id),
                action: action
            })
        })
        .then(response => {
            if (!response.ok) {
                return response.text().then(text => {
                    throw new Error(text || `Server returned ${response.status}`);
                });
            }
            return response.json();
        })
        .then(result => {
            console.log("Success:", result);
            alert(result.message);
            location.reload();
        })
        .catch(error => {
            console.error("Error:", error);
            alert("Failed to process request: " + error.message);
        });
    }

         var currentRepairRequestId = null;

    // Open notes modal
    function openNotesModal(repairRequestId) {
        currentRepairRequestId = repairRequestId;
        document.getElementById('repairRequestId').value = repairRequestId;

        // Clear form
        document.getElementById('noteText').value = '';
        updateCharCount();

        // Load existing notes
        loadExistingNotes(repairRequestId);

        // Show modal
        var modal = new bootstrap.Modal(document.getElementById('notesModal'));
        modal.show();
    }

    // Load existing notes
    function loadExistingNotes(repairRequestId) {
        const existingNotesDiv = document.getElementById('existingNotes');
        existingNotesDiv.innerHTML = '<div class="text-muted">Loading notes...</div>';

        fetch(`/RepairRequests/GetNotes?repairRequestId=${repairRequestId}`)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    if (data.data && data.data.length > 0) {
                        let notesHtml = '';
                        data.data.forEach(note => {
                            const date = new Date(note.createdDate).toLocaleString();
                            notesHtml += `
                                <div class="mb-3 p-3 border-bottom">
                                    <div class="d-flex justify-content-between align-items-start mb-2">
                                        <small class="text-muted">
                                            <i class="fas fa-user"></i> ${note.createdBy || 'Unknown'}
                                        </small>
                                        <small class="text-muted">
                                            <i class="fas fa-clock"></i> ${date}
                                        </small>
                                    </div>
                                    <div class="note-content">
                                        ${escapeHtml(note.notes)}
                                    </div>
                                </div>
                            `;
                        });
                        existingNotesDiv.innerHTML = notesHtml;
                    } else {
                        existingNotesDiv.innerHTML = '<div class="text-muted">No notes available for this repair request.</div>';
                    }
                } else {
                    existingNotesDiv.innerHTML = '<div class="text-danger">Error loading notes: ' + data.message + '</div>';
                }
            })
            .catch(error => {
                existingNotesDiv.innerHTML = '<div class="text-danger">Error loading notes: ' + error.message + '</div>';
            });
    }

    // Save new note
    function saveNote() {
        const repairRequestId = document.getElementById('repairRequestId').value;
        const noteText = document.getElementById('noteText').value.trim();

        if (!noteText) {
            alert('Please enter a note before saving.');
            return;
        }

        const saveButton = document.querySelector('#notesModal .btn-primary');
        const originalText = saveButton.innerHTML;
        saveButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Saving...';
        saveButton.disabled = true;

        const noteData = {
            RepairRequestId: parseInt(repairRequestId),
            Notes: noteText,
            CreatedBy: getCurrentUsername() // You'll need to implement this function
        };

        fetch('/RepairRequests/SaveNote', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(noteData)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Clear the form
                document.getElementById('noteText').value = '';
                updateCharCount();

                // Reload the notes
                loadExistingNotes(repairRequestId);

                // Show success message
                showToast('Note saved successfully!', 'success');
            } else {
                alert('Error saving note: ' + data.message);
            }
        })
        .catch(error => {
            alert('Error saving note: ' + error.message);
        })
        .finally(() => {
            saveButton.innerHTML = originalText;
            saveButton.disabled = false;
        });
    }

    // Update character count
    function updateCharCount() {
        const noteText = document.getElementById('noteText');
        const charCount = document.getElementById('charCount');
        charCount.textContent = noteText.value.length;
    }

    // Helper function to escape HTML
    function escapeHtml(unsafe) {
        return unsafe
             .replace(/&/g, "&amp;")
             .replace(/</g, "&lt;")
             .replace(/>/g, "&gt;")
             .replace(/"/g, "&quot;")
             .replace(/'/g, "&#039;")
             .replace(/\n/g, "<br>");
    }

    function getCurrentUsername() {
        return 'Current Technical Assistant or On Call';
    }

    // Helper function to show toast notifications
    function showToast(message, type = 'info') {
        alert(message);
    }


    document.addEventListener('DOMContentLoaded', function() {
        // Character count update
        const noteTextArea = document.getElementById('noteText');
        if (noteTextArea) {
            noteTextArea.addEventListener('input', updateCharCount);
        }

        // Enter key handling (Ctrl+Enter to save)
        document.addEventListener('keydown', function(e) {
            if (e.ctrlKey && e.key === 'Enter') {
                const modal = document.getElementById('notesModal');
                if (modal.classList.contains('show')) {
                    saveNote();
                }
            }
        });
    });
</script>